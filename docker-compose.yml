version: "3"
services:
  jmx-exporter:
    build: ./jmx-exporter
    tty: true
    volumes:
    - jmx-exporter-vol:/usr/share/jmx_exporter/

  zookeeper-1:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper-1
    ports:
    - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: "1"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/zookeeper.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - jmx-exporter-vol:/usr/share/jmx_exporter/
    depends_on:
    - jmx-exporter

  zookeeper-2:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper-2
    ports:
    - 2182:2182
    environment:
      ZOOKEEPER_SERVER_ID: "2"
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/zookeeper.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - jmx-exporter-vol:/usr/share/jmx_exporter/
    depends_on:
    - jmx-exporter

  zookeeper-3:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper-3
    ports:
    - 2183:2183
    environment:
      ZOOKEEPER_SERVER_ID: "3"
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/zookeeper.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - jmx-exporter-vol:/usr/share/jmx_exporter/
    depends_on:
    - jmx-exporter

  kafka-1:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    hostname: kafka-1
    ports:
    - 19092:19092
    - 39999:39999
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - jmx-exporter
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_LISTENERS: "INTERNAL://kafka-1:9092,EXTERNAL://:19092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-1:9092,EXTERNAL://localhost:19092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9093
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_BROKER_ID: "1"
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-2.0.0.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_JMX_PORT: 39999
    volumes:
    - jmx-exporter-vol:/usr/share/jmx_exporter/

  kafka-2:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    hostname: kafka-2
    ports:
    - 19093:19093
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - jmx-exporter
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2182,zookeeper-4:2183"
      KAFKA_LISTENERS: "INTERNAL://kafka-2:9092,EXTERNAL://:19093" 
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-2:9092,EXTERNAL://localhost:19093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9093
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_BROKER_ID: "2"
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-2.0.0.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
    volumes:
    - jmx-exporter-vol:/usr/share/jmx_exporter/

  kafka-3:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    hostname: kafka-3
    ports:
    - 19094:19094
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - jmx-exporter
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_LISTENERS: "INTERNAL://kafka-3:9092,EXTERNAL://localhost:19094"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-3:9092,EXTERNAL://localhost:19094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9093
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_BROKER_ID: "3"
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-2.0.0.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
    volumes:
    - jmx-exporter-vol:/usr/share/jmx_exporter/

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.3.1
    container_name: control-center
    restart: always
    depends_on:
      - zookeeper-1
      - kafka-1
    ports:
      - "9021:9021"
      - "9022:9022"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      #CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2"
      CONTROL_CENTER_REPLICATION_FACTOR: 2
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 2
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 2
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 2
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 2
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      # Amount of heap to use for internal caches. Increase for better thoughput
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 100000000
      CONTROL_CENTER_CONNECT_ES-CONNECT_CLUSTER: "http://kafka-connect-cp:18083"
      CONTROL_CENTER_CONNECT_DEBEZIUM-CONNECT_CLUSTER: "http://connect-debezium:8083"
      CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "https://schema-registry:8081"
      CONTROL_CENTER_DEPRECATED_VIEWS_ENABLE: "true"
      CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
      # HTTP and HTTPS to Control Center UI
      CONTROL_CENTER_REST_LISTENERS: "http://0.0.0.0:9021,https://0.0.0.0:9022"

  producer:
    build: ./sample-application/producer
    environment:
      JAVA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-producer.yml -Xmx256M -Xms256M
    volumes:
      - jmx-exporter-vol:/usr/share/jmx_exporter/
    depends_on:
      - jmx-exporter
      - kafka-1
      - kafka-2
      - kafka-3

  consumer:
    build: ./sample-application/consumer
    environment:
      JAVA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-consumer.yml -Xmx256M -Xms256M
    volumes:
      - jmx-exporter-vol:/usr/share/jmx_exporter/
    depends_on:
      - jmx-exporter
      - kafka-1
      - kafka-2
      - kafka-3

  prometheus:
    image: prom/prometheus:v2.11.1
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/

  alertmanager:
    image: prom/alertmanager:v0.18.0
    ports:
      - 9093:9093

  node-exporter:
    image: prom/node-exporter:v0.18.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^(aufs|proc|nsfs|shm|cgroup|tmpfs|binfmt_misc|debugfs|devpts|fusectl|hugetlbfs|fuse.lxcfs|mqueue|pstore|securityfs|sysfs|autofs|devtmpfs|configfs)'

  grafana:
    image: grafana/grafana:6.3.0
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/

volumes:
  jmx-exporter-vol: {}
